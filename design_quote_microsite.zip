# poly_quote.py
# Generates a simple PDF quote using built-in Helvetica (no external TTF required)

from datetime import datetime
from fpdf import FPDF

def create_pdf(
    title="Design Services Quote",
    items=None,
    currency="AUD",
):
    """
    Build a simple quote PDF and return bytes.
    :param title: Title shown at the top of the PDF
    :param items: list of dicts like:
                  [{"desc": "Animated Artwork Development", "qty": 1, "unit": 500.0},
                   {"desc": "Additional Rounds of Amends", "qty": 2, "unit": 50.0}]
    :param currency: Currency code label for display only
    :return: bytes of the generated PDF
    """
    if items is None:
        # Example line items (replace with your real data)
        items = [
            {"desc": "Animated Artwork Development", "qty": 1, "unit": 500.0},
            {"desc": "Additional Rounds of Amends", "qty": 2, "unit": 50.0},
        ]

    # --- Prepare totals ---
    def money(n):
        # Simple formatting; swap to locale/Intl if you need localization
        return f"{currency} {n:,.2f}"

    subtotal = sum(i["qty"] * i["unit"] for i in items)
    tax_rate = 0.0  # set if needed, e.g., 0.10 for 10%
    tax = subtotal * tax_rate
    total = subtotal + tax

    # --- PDF setup ---
    pdf = FPDF(orientation="P", unit="mm", format="A4")
    pdf.set_auto_page_break(auto=True, margin=15)
    pdf.add_page()

    # Use built-in Helvetica (no add_font required)
    pdf.set_font("Helvetica", "B", 16)
    pdf.cell(0, 10, title, ln=True)

    pdf.set_font("Helvetica", "", 11)
    pdf.set_text_color(80, 80, 80)
    pdf.cell(0, 7, f"Created: {datetime.now().strftime('%Y-%m-%d %H:%M')}", ln=True)
    pdf.set_text_color(0, 0, 0)
    pdf.ln(2)

    # Table header
    pdf.set_font("Helvetica", "B", 11)
    col_desc_w = 110
    col_qty_w = 20
    col_unit_w = 30
    col_total_w = 30
    row_h = 8

    pdf.cell(col_desc_w, row_h, "Description", border=1)
    pdf.cell(col_qty_w, row_h, "Qty", border=1, align="R")
    pdf.cell(col_unit_w, row_h, "Unit", border=1, align="R")
    pdf.cell(col_total_w, row_h, "Line Total", border=1,_
